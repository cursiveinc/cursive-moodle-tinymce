{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/plugin\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\nimport {getTinyMCE} from 'editor_tiny/loader';\nimport {getPluginMetadata} from 'editor_tiny/utils';\nimport {component, pluginName} from './common';\nimport * as Autosaver from './autosaver';\nimport getConfig from 'core/ajax';\nexport default new Promise((resolve, reject) => {\n    Promise.all([\n        getTinyMCE(),\n        getPluginMetadata(component, pluginName),\n    ])\n        .then(([tinyMCE, pluginMetadata]) => {\n            tinyMCE.PluginManager.add(pluginName, (editor) => {\n\n                getConfig.call([{\n                    methodname: \"cursive_get_config\",\n                    args: {courseid: M.cfg.courseId, cmid: M.cfg.contextInstanceId}\n                }])[0].done((data) => {\n                    if (data.status) {\n                        Autosaver.register(editor, data.sync_interval);\n                    }\n                }).fail((error) => {\n                    window.console.error('Error getting cursive config:', error);\n                });\n\n                return pluginMetadata;\n            });\n            resolve(pluginName);\n            return true;\n        })\n        .catch((error) => {\n            reject(error);\n        });\n});\n"],"names":["obj","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Autosaver","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_ajax","_default","Promise","resolve","reject","all","getTinyMCE","getPluginMetadata","component","pluginName","then","_ref","tinyMCE","pluginMetadata","PluginManager","add","editor","getConfig","methodname","args","courseid","M","cfg","courseId","cmid","contextInstanceId","done","data","status","register","sync_interval","fail","error","window","console","catch","_exports"],"mappings":"kLA0BkC,IAAAA,IAAA,SAAAC,yBAAAC,mCAAAC,wBAAAC,sBAAAD,QAAAE,qBAAAF,eAAAF,kCAAAC,oBAAAA,YAAAG,iBAAAD,oBAAAF,6FADlCI,UACkC,SAAAN,IAAAE,iBAAAA,aAAAF,KAAAA,IAAAO,kBAAAP,cAAAA,sBAAAA,wBAAAA,WAAAQ,QAAAR,SAAAS,MAAAR,yBAAAC,gBAAAO,OAAAA,MAAAC,IAAAV,YAAAS,MAAAE,IAAAX,SAAAY,UAAAC,sBAAAC,OAAAC,gBAAAD,OAAAE,iCAAAC,OAAAjB,mBAAAiB,KAAAH,OAAAI,UAAAC,eAAAC,KAAApB,IAAAiB,UAAAI,KAAAR,sBAAAC,OAAAE,yBAAAhB,IAAAiB,UAAAI,OAAAA,KAAAV,KAAAU,KAAAC,KAAAR,OAAAC,eAAAH,OAAAK,IAAAI,MAAAT,OAAAK,KAAAjB,IAAAiB,KAAAL,OAAAJ,QAAAR,IAAAS,OAAAA,MAAAa,IAAAtB,IAAAY,eAAAA,OADlCW,CAAAjB,WACAkB,OAAkCxB,IAAlCwB,QAAkCxB,IAAAO,WAAAP,KAAAQ,QAAAR,KAAA,IAAAyB,SACnB,IAAIC,SAAQ,CAACC,QAASC,UACjCF,QAAQG,IAAI,EACR,EAAAC,uBACA,EAAAC,0BAAkBC,kBAAWC,sBAE5BC,MAAKC,OAA+B,IAA7BC,QAASC,gBAAeF,KAiB5B,OAhBAC,QAAQE,cAAcC,IAAIN,oBAAaO,SAEnCC,cAAUrB,KAAK,CAAC,CACZsB,WAAY,qBACZC,KAAM,CAACC,SAAUC,EAAEC,IAAIC,SAAUC,KAAMH,EAAEC,IAAIG,sBAC7C,GAAGC,MAAMC,OACLA,KAAKC,QACL9C,UAAU+C,SAASb,OAAQW,KAAKG,kBAErCC,MAAMC,QACLC,OAAOC,QAAQF,MAAM,gCAAiCA,UAGnDnB,kBAEXV,QAAQM,qBACD,KAEV0B,OAAOH,QACJ5B,OAAO4B,aAEjB,OAAAI,SAAApD,QAAAiB,SAAAmC,SAAApD"}