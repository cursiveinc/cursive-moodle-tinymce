{"version":3,"file":"analytic_events.min.js","sources":["../src/analytic_events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module analytic_events\n *\n * @module     tiny_cursive/analytic_events\n * @copyright  2024 CTI <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport MyModal from \"./analytic_modal\";\nimport { call as getContent } from \"core/ajax\";\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nimport Chart from 'core/chartjs';\nexport default class AnalyticEvents {\n\n    createModal(userid, context, questionid = '', authIcon) {\n        $('#analytics' + userid + questionid).on('click', function (e) {\n            e.preventDefault();\n\n            // Create Moodle modal\n            MyModal.create({ templateContext: context }).then(modal => {\n                $('#content' + userid + ' .table tbody tr:first-child td:nth-child(2)').html(authIcon);\n                modal.show();\n            }).catch(error => {\n                window.window.console.error(\"Failed to create modal:\", error);\n            });\n        });\n    }\n\n    analytics(userid, templates, context, questionid = '', replayInstances = null, authIcon) {\n        $('body').on('click', '#analytic' + userid + questionid, function (e) {\n            $('#rep' + userid + questionid).prop('disabled', false);\n            $('#quality' + userid + questionid).prop('disabled', false);\n            e.preventDefault();\n            $('#content' + userid).html($('<div>').addClass('d-flex justify-content-center my-5')\n                .append($('<div>').addClass('tiny_cursive-loader')));\n            if (replayInstances && replayInstances[userid]) {\n                replayInstances[userid].stopReplay();\n            }\n            $('.tiny_cursive-nav-tab').find('.active').removeClass('active');\n            $(this).addClass('active'); // Add 'active' class to the clicked element\n\n            templates.render('tiny_cursive/analytics_table', context).then(function (html) {\n                $('#content' + userid).html(html);\n                $('#content' + userid + ' .table tbody tr:first-child td:nth-child(2)').html(authIcon);\n\n            }).fail(function (error) {\n                window.console.error(\"Failed to render template:\", error);\n            });\n        });\n    }\n\n    checkDiff(userid, fileid, questionid = '', replayInstances = null) {\n        const nodata = document.createElement('p');\n        nodata.classList.add('text-center', 'p-5', 'bg-light', 'rounded', 'm-5', 'text-primary');\n        nodata.style.verticalAlign = 'middle';\n        nodata.style.textTransform = 'uppercase';\n        nodata.style.fontWeight = '500';\n        nodata.textContent = \"no data received yet\";\n\n        $('body').on('click', '#diff' + userid + questionid, function (e) {\n            $('#rep' + userid + questionid).prop('disabled', false);\n            $('#quality' + userid + questionid).prop('disabled', false);\n            e.preventDefault();\n            $('#content' + userid).html($('<div>').addClass('d-flex justify-content-center my-5')\n                .append($('<div>').addClass('tiny_cursive-loader')));\n            $('.tiny_cursive-nav-tab').find('.active').removeClass('active');\n            $(this).addClass('active'); // Add 'active' class to the clicked element\n            if (replayInstances && replayInstances[userid]) {\n                replayInstances[userid].stopReplay();\n            }\n            if (!fileid) {\n                $('#content' + userid).html(nodata);\n                throw new Error('Missing file id or Difference Content not received yet');\n            }\n            getContent([{\n                methodname: 'cursive_get_writing_differences',\n                args: { fileid: fileid },\n            }])[0].done(response => {\n                let responsedata = JSON.parse(response.data);\n                if (responsedata[0]) {\n                    let submitted_text = atob(responsedata[0].submitted_text);\n\n                    // Fetch the dynamic strings\n                    Str.get_strings([\n                        { key: 'original_text', component: 'tiny_cursive' },\n                        { key: 'editspastesai', component: 'tiny_cursive' }\n                    ]).done(strings => {\n                        const originalTextString = strings[0];\n                        const editsPastesAIString = strings[1];\n\n                        const $legend = $('<div class=\"d-flex p-2 border rounded mb-2\">');\n\n                        // Create the first legend item\n                        const $attributedItem = $('<div>', { class: 'tiny_cursive-legend-item' });\n                        const $attributedBox = $('<div>', { class: 'tiny_cursive-box attributed' });\n                        const $attributedText = $('<span>').text(originalTextString);\n                        $attributedItem.append($attributedBox).append($attributedText);\n\n                        // Create the second legend item\n                        const $unattributedItem = $('<div>', { class: 'tiny_cursive-legend-item' });\n                        const $unattributedBox = $('<div>', { class: 'tiny_cursive-box tiny_cursive_added' });\n                        const $unattributedText = $('<span>').text(editsPastesAIString);\n                        $unattributedItem.append($unattributedBox).append($unattributedText);\n\n                        // Append the legend items to the legend container\n                        $legend.append($attributedItem).append($unattributedItem);\n\n                        let contents = $('<div>').addClass('tiny_cursive-comparison-content');\n                        let textBlock2 = $('<div>').addClass('tiny_cursive-text-block').append(\n                            $('<div>').attr('id', 'tiny_cursive-reconstructed_text').html(JSON.parse(submitted_text))\n                        );\n\n                        contents.append($legend, textBlock2);\n                        $('#content' + userid).html(contents); // Update content\n                    }).fail(error => {\n                        window.console.error(\"Failed to load language strings:\", error);\n                        $('#content' + userid).html(nodata);\n                    });\n                } else {\n                    $('#content' + userid).html(nodata);\n                }\n            }).fail(error => {\n                $('#content' + userid).html(nodata);\n                throw new Error('Error loading JSON file: ' + error.message);\n            });\n        });\n    }\n\n    replyWriting(userid, filepath, questionid = '', replayInstances = null) {\n        $('body').on('click', '#rep' + userid + questionid, function (e) {\n            $(this).prop('disabled', true);\n            $('#quality' + userid + questionid).prop('disabled', false);\n            e.preventDefault();\n            $('#content' + userid).html($('<div>').addClass('d-flex justify-content-center my-5')\n                .append($('<div>').addClass('tiny_cursive-loader')));\n            $('.tiny_cursive-nav-tab').find('.active').removeClass('active');\n            $(this).addClass('active'); // Add 'active' class to the clicked element\n            if (replayInstances && replayInstances[userid]) {\n                replayInstances[userid].stopReplay();\n            }\n            if (questionid) {\n                // eslint-disable-next-line\n                video_playback(userid, filepath, questionid);\n            } else {\n                // eslint-disable-next-line\n                video_playback(userid, filepath);\n            }\n        });\n    }\n\n    quality(userid, templates, context, questionid = '', replayInstances = null, cmid) {\n        let metricsData = '';\n        const nodata = document.createElement('p');\n        nodata.classList.add('text-center', 'p-5', 'bg-light', 'rounded', 'm-5', 'text-primary');\n        nodata.style.verticalAlign = 'middle';\n        nodata.style.textTransform = 'uppercase';\n        nodata.style.fontWeight = '500';\n        nodata.textContent = \"no data received yet\";\n\n        $('body').on('click', '#quality' + userid + questionid, function (e) {\n\n            $(this).prop('disabled', true);\n            $('#rep' + userid + questionid).prop('disabled', false);\n            e.preventDefault();\n            $('.tiny_cursive-nav-tab').find('.active').removeClass('active');\n            $(this).addClass('active'); // Add 'active' class to the clicked element\n\n            let res = getContent([{\n                methodname: 'cursive_get_quality_metrics',\n                args: { file_id: context.tabledata.file_id ?? userid, cmid: cmid },\n            }]);\n\n            const content = document.getElementById('content' + userid);\n            if (content) {\n                content.innerHTML = '';\n                const loaderDiv = document.createElement('div');\n                loaderDiv.className = 'd-flex justify-content-center my-5';\n                const loader = document.createElement('div');\n                loader.className = 'tiny_cursive-loader';\n                loaderDiv.appendChild(loader);\n                content.appendChild(loaderDiv);\n            }\n\n            if (replayInstances && replayInstances[userid]) {\n                replayInstances[userid].stopReplay();\n            }\n\n            templates.render('tiny_cursive/quality_chart', context).then(function (html) {\n                const content = document.getElementById('content' + userid);\n\n                res[0].done(response => {\n                    if (response.status) {\n                        metricsData = response.data;\n                        let proUser = metricsData.quality_access;\n                        // if (!proUser) {\n                        //     templates.render('tiny_cursive/upgrade_to_pro', []).then(function (html) {\n                        //         $('#content' + userid).html(html);\n                        //     }).fail(function (error) {\n                        //         window.console.error(\"Failed to render template:\", error);\n                        //     });\n                        // } else {\n\n                            if (content) content.innerHTML = html;\n                            if (!metricsData) $('#content' + userid).html(nodata);\n\n                            var originalData = [\n                                metricsData.word_len_mean, metricsData.edits, metricsData.p_burst_cnt, metricsData.p_burst_mean,\n                                metricsData.q_count, metricsData.sentence_count, metricsData.total_active_time, metricsData.verbosity,\n                                metricsData.word_count, metricsData.sent_word_count_mean\n                            ];\n\n                            let chartvas = document.querySelector('#chart' + userid);\n                            const data = {\n                                labels: [\n                                    'Average Word Length',\n                                    'Edits',\n                                    'P-burst Count',\n                                    'P-Burst Mean',\n                                    'Q Count',\n                                    'Sentence Count',\n                                    'Total Active Time',\n                                    'Verbosity',\n                                    'Word Count',\n                                    'Word Count per Sentence Mean'\n                                ],\n                                datasets: [{\n                                    data: originalData.map(d => {\n                                        if (d > 100) {\n                                            return 100;\n                                        } else if (d < -100) {\n                                            return -100;\n                                        } else {\n                                            return d;\n                                        }\n                                    }),\n                                    backgroundColor: function (context) {\n                                        // Apply green or gray depending on value\n                                        const value = context.raw;\n\n                                        if (value > 0 && value < 100) {\n                                            return '#43BB97';\n                                        } else if (value < 0) {\n                                            return '#AAAAAA';\n                                        } else {\n                                            return '#00432F'; // Green for positive, gray for negative\n                                        }\n\n                                    },\n                                    barPercentage: 0.75,\n                                }]\n                            };\n\n                            const drawPercentage = {\n                                id: 'drawPercentage',\n                                afterDraw: (chart, args, options) => {\n                                    const { ctx, data } = chart;\n                                    ctx.save();\n                                    let value;\n                                    chart.getDatasetMeta(0).data.forEach((dataPoint, index) => {\n                                        value = parseInt(data.datasets[0].data[index]);\n                                        if (!value) {\n                                            value = 0;\n                                        }\n                                        value = originalData[index];\n\n                                        ctx.font = \"bold 14px sans-serif\";\n\n                                        if (value > 25 && value <= 100) {\n                                            ctx.fillStyle = 'white';\n                                            ctx.textAlign = 'right';\n                                            ctx.fillText(value + '%', dataPoint.x - 5, dataPoint.y + 5);\n                                        } else if (value <= 10 && value > 0) {\n                                            ctx.fillStyle = '#43bb97';\n                                            ctx.textAlign = 'left';\n                                            ctx.fillText('0' + value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                        } else if (value == 0 || value == undefined) {\n                                        } else if (value > 100) {\n                                            ctx.fillStyle = 'white';\n                                            ctx.textAlign = 'right';\n                                            ctx.fillText(value + '%', dataPoint.x - 5, dataPoint.y + 5);\n                                        } else if (value < -25 && value >= -100) {\n                                            ctx.fillStyle = 'white';\n                                            ctx.textAlign = 'left';\n                                            ctx.fillText(value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                        } else if (value < -100) {\n                                            ctx.fillStyle = 'white';\n                                            ctx.textAlign = 'left';\n                                            ctx.fillText(value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                        } else if (value > -25 && value < 0) {\n                                            ctx.fillStyle = 'grey';\n                                            ctx.textAlign = 'right';\n                                            ctx.fillText(value + '%', dataPoint.x - 5, dataPoint.y + 5);\n                                        } else {\n                                            ctx.fillStyle = '#43bb97';\n                                            ctx.textAlign = 'left';\n                                            ctx.fillText(value + '%', dataPoint.x + 5, dataPoint.y + 5);\n                                        }\n\n\n\n\n                                    });\n                                }\n                            }\n\n                            const chartAreaBg = {\n                                id: 'chartAreaBg',\n                                beforeDraw: (chart, args, plugins) => {\n                                    const { ctx, data, chartArea: { left, right, top, bottom, height }, scales: { x, y } } = chart;\n                                    ctx.save();\n\n                                    const segmentPixel = y.getPixelForValue(y.ticks[0].value) - y.getPixelForValue(y.ticks[1].value);\n                                    const doubleSegment = y.ticks[2].value - y.ticks[0].value;\n                                    let tickArray = [];\n\n                                    // Generate tick values\n                                    for (let i = 0; i <= y.max; i += doubleSegment) {\n                                        if (i !== y.max) {\n                                            tickArray.push(i);\n                                        }\n                                    }\n\n                                    // Draw the background rectangles for each tick\n                                    tickArray.forEach(tick => {\n                                        ctx.fillStyle = 'rgba(0, 0, 0, 0.02)';\n                                        ctx.fillRect(0, y.getPixelForValue(tick) + 63, x.width + x.width + 21, segmentPixel);\n                                    });\n\n                                    // Draw labels and values\n                                    // const dataset = chart.data.datasets[0];\n                                    // const labelOffset = 5; // Offset for positioning\n\n                                    // Loop through each tick to draw the text\n                                    // y.ticks.forEach((tick, index) => {\n                                    //     // console.log(Object.getPrototypeOf(tick.$context.tick.$context).scale);\n                                    //     const value = dataset.data[index]; // Get the value for the current label\n                                    //     const xPosition = x.left; // X position for the text\n                                    //     const yPosition = y.getPixelForTick(index); // Y position for the tick\n\n                                    //     ctx.fillStyle = 'red'; // Set color to match the bar\n                                    //     ctx.fillText(`${value}%`, xPosition, yPosition+7); // Draw the colored value\n                                    // });\n\n                                    // ctx.restore();\n                                }\n                            };\n\n\n                            new Chart(chartvas, {\n                                type: 'bar',\n                                data: data,\n                                options: {\n                                    responsive: false,\n                                    maintainAspectRatio: false,\n                                    indexAxis: 'y',\n                                    elements: {\n                                        bar: {\n                                            borderRadius: 16,\n                                            borderWidth: 0,\n                                            zIndex: 1,\n                                        }\n                                    },\n                                    scales: {\n                                        x: {\n                                            beginAtZero: true,\n                                            min: -100,\n                                            max: 100,\n                                            ticks: {\n                                                callback: function (value) {\n                                                    if (value === -100 || value === 100) {\n                                                        return value + '%';\n                                                    } else if (value === 0) {\n                                                        return 'Average';\n                                                    }\n                                                    return '';\n                                                },\n                                                display: true,\n                                                font: function (context) {\n                                                    if (context && context.tick && context.tick.value === 0) {\n                                                        return {\n                                                            weight: 'bold',\n                                                            size: 14,\n                                                            color: 'black'\n                                                        };\n                                                    }\n                                                    return {\n                                                        weight: 'bold',\n                                                        size: 13,\n                                                        color: 'black'\n                                                    };\n                                                },\n                                                color: 'black',\n\n                                            },\n                                            grid: {\n                                                display: true,\n                                                color: function (context) {\n                                                    return context.tick.value === 0 ? 'black' : '#eaeaea';\n                                                },\n                                                // lineWidth: function (context) {\n                                                //     return context.tick.value === 0 ? 2 : 1; // Thicker line for 0 range\n                                                // },\n                                                tickLength: 0,\n                                            },\n                                            position: 'top'\n\n                                        },\n                                        y: {\n                                            beginAtZero: true,\n                                            ticks: {\n                                                // callback: function (value, index, ticks) {\n                                                //     return `${data.labels[index]} ${data.datasets[0].data[index]}%`; // Format the label\n                                                // },\n                                                display: true,\n                                                align: 'center',\n\n                                                crossAlign: 'far',\n                                                font: {\n                                                    size: 18,\n                                                },\n                                                tickLength: 100,\n                                                color: 'black',\n                                            },\n                                            grid: {\n                                                display: true,\n                                                tickLength: 1000,\n                                            },\n\n                                        }\n                                    },\n                                    plugins: {\n                                        legend: {\n                                            display: false,\n                                        },\n                                        title: {\n                                            display: false,\n                                        },\n                                        tooltip: {\n                                            yAlign: 'bottom',\n                                            xAlign: 'center',\n                                            callbacks: {\n                                                label: function (context) {\n                                                    // console.log(context);\n                                                    const originalValue = originalData[context.dataIndex];\n                                                    return originalValue; // Show the original value\n                                                },\n                                            },\n                                        },\n                                    }\n                                },\n                                plugins: [chartAreaBg, drawPercentage]\n                            });\n                        // }\n                    }\n                }).fail(error => {\n                    $('#content' + userid).html(nodata);\n                    throw new Error('Error: no data received yet');\n                });\n            }).catch(function (error) {\n                console.error(\"Failed to render template:\", error);\n            });\n\n            document.querySelectorAll('.tiny_cursive-nav-tab .active').forEach(el => el.classList.remove('active'));\n            e.target.classList.add('active');\n\n            // templates.render('tiny_cursive/quality_cart', context).then(function (html) {\n            //     const content = document.getElementById('content' + userid);\n            //     if (content) content.innerHTML = html;\n\n\n\n            // }).catch(function (error) {\n            //     console.error(\"Failed to render template:\", error);\n            // });\n\n        });\n    }\n\n    formatedTime(data) {\n        if (data.total_time_seconds) {\n            let total_time_seconds = data.total_time_seconds;\n            let hours = Math.floor(total_time_seconds / 3600).toString().padStart(2, 0);\n            let minutes = Math.floor((total_time_seconds % 3600) / 60).toString().padStart(2, 0);\n            let seconds = (total_time_seconds % 60).toString().padStart(2, 0);\n            return `${hours}h ${minutes}m ${seconds}s`;\n        } else {\n            return \"0h 0m 0s\";\n        }\n    }\n\n    authorshipStatus(firstFile, score, score_setting) {\n        var icon = 'fa fa-circle-o';\n        var color = 'font-size:32px;color:black';\n        var score = parseFloat(score);\n\n        if (firstFile) {\n            icon = 'fa fa-solid fa-info-circle';\n            color = 'font-size:32px;color:#000000';\n        } else if (score >= score_setting) {\n            icon = 'fa fa-check-circle';\n            color = 'font-size:32px;color:green';\n        } else if (score < score_setting) {\n            icon = 'fa fa-question-circle';\n            color = 'font-size:32px;color:#A9A9A9';\n        }\n\n        return $('<i>').addClass(icon).attr('style', color);\n    }\n}\n"],"names":["createModal","userid","context","questionid","authIcon","on","e","preventDefault","create","templateContext","then","modal","html","show","catch","error","window","console","analytics","templates","replayInstances","prop","addClass","append","stopReplay","find","removeClass","this","render","fail","checkDiff","fileid","nodata","document","createElement","classList","add","style","verticalAlign","textTransform","fontWeight","textContent","Error","methodname","args","done","response","responsedata","JSON","parse","data","submitted_text","atob","Str","get_strings","key","component","strings","originalTextString","editsPastesAIString","$legend","$attributedItem","class","$attributedBox","$attributedText","text","$unattributedItem","$unattributedBox","$unattributedText","contents","textBlock2","attr","message","replyWriting","filepath","video_playback","quality","cmid","metricsData","res","file_id","tabledata","content","getElementById","innerHTML","loaderDiv","className","loader","appendChild","status","quality_access","originalData","word_len_mean","edits","p_burst_cnt","p_burst_mean","q_count","sentence_count","total_active_time","verbosity","word_count","sent_word_count_mean","chartvas","querySelector","labels","datasets","map","d","backgroundColor","value","raw","barPercentage","drawPercentage","id","afterDraw","chart","options","ctx","save","getDatasetMeta","forEach","dataPoint","index","parseInt","font","fillStyle","textAlign","fillText","x","y","undefined","chartAreaBg","beforeDraw","plugins","chartArea","left","right","top","bottom","height","scales","segmentPixel","getPixelForValue","ticks","doubleSegment","tickArray","i","max","push","tick","fillRect","width","Chart","type","responsive","maintainAspectRatio","indexAxis","elements","bar","borderRadius","borderWidth","zIndex","beginAtZero","min","callback","display","weight","size","color","grid","tickLength","position","align","crossAlign","legend","title","tooltip","yAlign","xAlign","callbacks","label","dataIndex","querySelectorAll","el","remove","target","formatedTime","total_time_seconds","hours","Math","floor","toString","padStart","minutes","seconds","authorshipStatus","firstFile","score","score_setting","icon","parseFloat"],"mappings":"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"}