{"version":3,"file":"autosaver.min.js","sources":["../src/autosaver.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/autosaver\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\nimport { call } from 'core/ajax';\nimport { create } from 'core/modal_factory';\nimport { get_string as getString } from 'core/str';\nimport { save, cancel, hidden } from 'core/modal_events';\nimport jQuery from 'jquery';\nimport user from 'tiny_cursive/user';\n\nexport const register = (editor, interval) => {\n\n    var is_student = !(jQuery('#body').hasClass('teacher_admin'));\n    var intervention = jQuery('#body').hasClass('intervention');\n    var userid = null;\n    var host = null;\n    var courseid = null;\n    var filename = \"\";\n    var quizSubmit = jQuery('#mod_quiz-next-nav');\n    var ed = \"\";\n    var event = \"\";\n    var recourceId = 0;\n    var modulename = \"\";\n    var editorid = editor?.id;\n    let bodyid = jQuery('body').attr('class');\n    var classes = bodyid.split(' ');\n    var cmid = 0;\n    var questionid = 0;\n    let assignSubmit = jQuery('#id_submitbutton');\n    var syncInterval = interval ? interval  * 1000 : 10000; // Default: Sync Every 10s.\n\n    const postOne = async (methodname, args) => {\n        try {\n            const response = await call([{\n                methodname,\n                args,\n            }])[0];\n            return response;\n        } catch (error) {\n            window.console.error('Error in postOne:', error);\n            throw error;\n        }\n    };\n\n    assignSubmit.on('click', async function (e) {\n        e.preventDefault();\n        assignSubmit.prop('disabled', true); // Disable the button\n        \n        if (filename) {\n            SyncData().then(() => {\n                assignSubmit.off('click').click();\n            });\n        } else {\n            assignSubmit.off('click').click();\n        }\n    });\n\n    quizSubmit.on('click', async function (e) {\n        e.preventDefault();\n        if (filename) {\n            SyncData().then(() => {\n                quizSubmit.off('click').click();\n            });\n        } else {\n            quizSubmit.off('click').click();\n        }\n    });\n\n    const getModal = (e) => {\n        return create({\n            type: 'SAVE_CANCEL',\n            title: getString('tiny_cursive', 'tiny_cursive'),\n            body: '<textarea  class=\"form-control inputUrl\" value=\"\" id=\"inputUrl\" placeholder=\"sourceurl\"></textarea>',\n\n            removeOnClose: true,\n        })\n            .done(modal => {\n                modal.getRoot().append('<style>.close{ display: none ! important; }</style>');\n                modal.show();\n                var lastEvent = '';\n                modal.getRoot().on(save, function () {\n                    var number = document.getElementById(\"inputUrl\").value;\n                    if (number === \"\" || number === null || number === undefined) {\n                        editor.execCommand('Undo');\n                        alert(\"You cannot paste text without providing source\");\n                    } else {\n                        editor.execCommand('Paste');\n                    }\n                    let ur = e.srcElement.baseURI;\n                    let recourceId = 0;\n                    let parm = new URL(ur);\n                    let modulename = \"\";\n                    let editorid = editor?.id;\n                    let bodyid = jQuery('body').attr('class');\n                    let classes = bodyid.split(' ');\n                    let courseid = parseInt(classes.find((classname) => {\n                        return classname.startsWith('course-');\n                    }).split('-')[1]); // Getting cmid from body classlist.\n                    let cmid = parseInt(classes.find((classname) => {\n                        return classname.startsWith('cmid-');\n                    }).split('-')[1]); // Getting cmid from body classlist.\n\n\n                    if (ur.includes(\"attempt.php\") || ur.includes(\"forum\") || ur.includes(\"assign\")) { } else {\n                        return false;\n                    }\n\n                    if (!ur.includes(\"forum\") && !ur.includes(\"assign\")) {\n                        recourceId = parm.searchParams.get('attempt');\n                    }\n\n                    if (recourceId === null) {\n                        recourceId = 0;\n                    }\n                    if (ur.includes(\"forum\")) {\n                        modulename = \"forum\";\n                    }\n                    if (ur.includes(\"assign\")) {\n                        modulename = \"assign\";\n                    }\n                    if (ur.includes(\"attempt\")) {\n                        modulename = \"quiz\";\n                    }\n                    if (cmid === null) { cmid = 0; }\n\n                    postOne('cursive_user_comments', {\n                        modulename: modulename,\n                        cmid: cmid,\n                        resourceid: recourceId,\n                        courseid: courseid,\n                        usercomment: number,\n                        timemodified: \"1121232\",\n                        editorid: editorid ? editorid : \"\"\n                    });\n                    lastEvent = 'save';\n                    modal.destroy();\n                });\n                modal.getRoot().on(cancel, function () {\n\n                    editor.execCommand('Undo');\n                    lastEvent = 'cancel';\n                });\n                modal.getRoot().on(hidden, function () {\n                    if (lastEvent != 'cancel' && lastEvent != 'save') { editor.execCommand('Undo'); }\n                });\n                return modal;\n            });\n    };\n    const sendKeyEvent = (events, eds) => {\n        let ur = eds.srcElement.baseURI;\n        let parm = new URL(ur);\n        ed = eds;\n        event = events;\n        let bodyid = jQuery('body').attr('id');\n\n        if (bodyid == 'page-mod-quiz-attempt' || bodyid == 'page-mod-quiz-summary' ||\n            bodyid == 'page-mod-assign-editsubmission' || bodyid == 'page-mod-forum-view' ||\n            bodyid == 'page-mod-forum-post') {\n            cmid = parseInt(classes.find((classname) => {\n                return classname.startsWith('cmid-');\n            }).split('-')[1]); // Getting cmid from body classlist.\n        }\n\n        if (ur.includes(\"attempt.php\") || ur.includes(\"forum\") || ur.includes(\"assign\")) { } else {\n            return false;\n        }\n        if (ur.includes(\"forum\") || ur.includes(\"assign\")) {\n\n        } else {\n\n            recourceId = parm.searchParams.get('attempt');\n        }\n        if (recourceId === null) {\n\n            recourceId = 0;\n        }\n\n        if (ur.includes(\"forum\")) {\n            modulename = \"forum\";\n        }\n        if (ur.includes(\"assign\")) {\n            modulename = \"assign\";\n        }\n        if (ur.includes(\"attempt\")) {\n            modulename = \"quiz\";\n        }\n\n        filename = `${userid}_${recourceId}_${cmid}_${modulename}_attempt`;\n\n        if (modulename === 'quiz') {\n            questionid = editorid.split(':')[1].split('_')[0];\n            filename = `${userid}_${recourceId}_${cmid}_${questionid}_${modulename}_attempt`;\n\n        }\n\n        if (localStorage.getItem(filename)) {\n\n            let data = JSON.parse(localStorage.getItem(filename));\n            data.push({\n                resourceId: recourceId,\n                key: ed.key,\n                keyCode: ed.keyCode,\n                event: event,\n                courseId: courseid,\n                unixTimestamp: Date.now(),\n                clientId: host,\n                personId: userid\n            });\n            localStorage.setItem(filename, JSON.stringify(data));\n        } else {\n            let data = [];\n            data.push({\n                resourceId: recourceId,\n                key: ed.key,\n                keyCode: ed.keyCode,\n                event: event,\n                courseId: courseid,\n                unixTimestamp: Date.now(),\n                clientId: host,\n                personId: userid\n            });\n            localStorage.setItem(filename, JSON.stringify(data));\n        }\n\n    };\n    editor.on('keyUp', (editor) => {\n        sendKeyEvent(\"keyUp\", editor);\n    });\n    editor.on('Paste', async (e) => {\n        if (is_student && intervention) {\n            getModal(e);\n        }\n    });\n    editor.on('Redo', async (e) => {\n        if (is_student && intervention) {\n            getModal(e);\n        }\n    });\n    editor.on('keyDown', (editor) => {\n        sendKeyEvent(\"keyDown\", editor);\n    });\n    editor.on('init', () => {\n        let userdata = user.getUserId();\n        userid = userdata.userid;\n        host = userdata.host;\n        courseid = userdata.courseid;\n    });\n\n    /**\n * Synchronizes data from localStorage to server\n * @async\n * @function SyncData\n * @description Retrieves stored keypress data from localStorage and sends it to server\n * @returns {Promise} Returns response from server if data exists and is successfully sent\n * @throws {Error} Logs error to console if data submission fails\n */\n    async function SyncData() {\n\n        let data = localStorage.getItem(filename);\n\n        if (!data || data.length === 0) {\n            return;\n        } else {\n            localStorage.removeItem(filename);\n            try {\n                return await postOne('cursive_write_local_to_json', {\n                    key: ed.key,\n                    event: event,\n                    keyCode: ed.keyCode,\n                    resourceId: recourceId,\n                    cmid: cmid,\n                    modulename: modulename,\n                    editorid: editorid,\n                    json_data: data,\n                });\n            } catch (error) {\n                window.console.error('Error submitting data:', error);\n            }\n        }\n    }\n\n    window.addEventListener('unload', () => {\n        SyncData();\n    });\n\n    setInterval(SyncData, syncInterval);\n};\n"],"names":["editor","interval","is_student","hasClass","intervention","userid","host","courseid","filename","quizSubmit","ed","event","recourceId","modulename","editorid","id","classes","attr","split","cmid","questionid","assignSubmit","syncInterval","postOne","async","methodname","args","error","window","console","on","e","preventDefault","prop","SyncData","then","off","click","getModal","type","title","body","removeOnClose","done","modal","getRoot","append","show","lastEvent","save","number","document","getElementById","value","execCommand","alert","ur","srcElement","baseURI","parm","URL","parseInt","find","classname","startsWith","includes","searchParams","get","resourceid","usercomment","timemodified","destroy","cancel","hidden","sendKeyEvent","events","eds","bodyid","localStorage","getItem","data","JSON","parse","push","resourceId","key","keyCode","courseId","unixTimestamp","Date","now","clientId","personId","setItem","stringify","length","removeItem","json_data","userdata","user","getUserId","addEventListener","setInterval"],"mappings":"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"}