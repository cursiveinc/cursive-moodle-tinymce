{"version":3,"file":"autosaver.min.js","sources":["../src/autosaver.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/autosaver\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\nimport { call } from 'core/ajax';\nimport { create } from 'core/modal_factory';\nimport { get_string as getString } from 'core/str';\nimport { save, cancel, hidden } from 'core/modal_events';\nimport jQuery from 'jquery';\nimport user from 'tiny_cursive/user';\n\nexport const register = (editor) => {\n    const postOne = async (methodname, args) => {\n        try {\n            const response = await call([{\n                methodname,\n                args,\n            }])[0];\n            return response;\n        } catch (error) {\n            console.error('Error in postOne:', error);\n            throw error;\n        }\n    };\n    \n    var is_student = !(jQuery('#body').hasClass('teacher_admin'));\n    var intervention = jQuery('#body').hasClass('intervention');\n    var userid = null;\n    var filename = \"\";\n    var quizSubmit = jQuery('#mod_quiz-next-nav');\n    var ed = \"\";\n    var event = \"\";\n    let recourceId = 0;\n    let modulename = \"\";\n    let editorid = editor?.id;\n    let bodyid = jQuery('body').attr('class');\n    let classes = bodyid.split(' ');\n    let cmid = parseInt(classes.find((classname) => { return classname.startsWith('cmid-') }).split('-')[1]); // Getting cmid from body classlist.\n    let questionid = 0;\n    let assignSubmit = jQuery('#id_submitbutton');\n    \n    assignSubmit.on('click', async function (e) {\n        e.preventDefault();\n        if (filename) {\n            let data = localStorage.getItem(filename);\n            localStorage.removeItem(filename);\n    \n            try {\n                await postOne('cursive_write_local_to_json', {\n                    key: ed.key,\n                    event: event,\n                    keyCode: ed.keyCode,\n                    resourceId: recourceId,\n                    cmid: cmid,\n                    modulename: modulename,\n                    editorid: editorid,\n                    json_data: data,\n                });\n                // Custom logic completed, re-enable default action or other logic\n                assignSubmit.off('click').click();\n            } catch (error) {\n                console.error('Error submitting data:', error);\n                // Handle the error, if needed\n            }\n        } else {\n            // No filename, proceed with any other default actions\n            assignSubmit.off('click').click();\n        }\n    });\n    \n    quizSubmit.on('click', async function (e) {\n        e.preventDefault();\n        if (filename) {\n            let data = localStorage.getItem(filename);\n            localStorage.removeItem(filename);\n    \n            try {\n                await postOne('cursive_write_local_to_json', {\n                    key: ed.key,\n                    event: event,\n                    keyCode: ed.keyCode,\n                    resourceId: recourceId,\n                    cmid: cmid,\n                    modulename: modulename,\n                    editorid: editorid,\n                    json_data: data,\n                });\n                // Custom logic completed, re-enable default action or other logic\n                quizSubmit.off('click').click();\n            } catch (error) {\n                console.error('Error submitting data:', error);\n                // Handle the error, if needed\n            }\n        } else {\n            // No filename, proceed with any other default actions\n            quizSubmit.off('click').click();\n        }\n    });\n    \n\n    const getModal = (e) => {\n        return create({\n            type: 'SAVE_CANCEL',\n            title: getString('tiny_cursive', 'tiny_cursive'),\n            body: '<textarea  class=\"form-control inputUrl\" value=\"\" id=\"inputUrl\" placeholder=\"sourceurl\"></textarea>',\n\n            removeOnClose: true,\n        })\n            .done(modal => {\n                modal.getRoot().append('<style>.close{ display: none ! important; }</style>');\n                modal.show();\n                var lastEvent = '';\n                modal.getRoot().on(save, function () {\n                    var number = document.getElementById(\"inputUrl\").value;\n                    if (number === \"\" || number === null || number === undefined) {\n                        editor.execCommand('Undo');\n                        alert(\"You cannot paste text without providing source\");\n                    } else {\n                        editor.execCommand('Paste');\n                    }\n                    let ur = e.srcElement.baseURI;\n                    let recourceId = 0;\n                    let parm = new URL(ur);\n                    let modulename = \"\";\n                    let editorid = editor?.id;\n                    let bodyid = jQuery('body').attr('class');\n                    let classes = bodyid.split(' ');\n                    let courseid = parseInt(classes.find((classname) => { return classname.startsWith('course-') }).split('-')[1]); // Getting cmid from body classlist.\n                    let cmid = parseInt(classes.find((classname) => { return classname.startsWith('cmid-') }).split('-')[1]); // Getting cmid from body classlist.\n\n\n                    if (ur.includes(\"attempt.php\") || ur.includes(\"forum\") || ur.includes(\"assign\")) { } else {\n                        return false;\n                    }\n\n                    if (!ur.includes(\"forum\") && !ur.includes(\"assign\")) {\n                        recourceId = parm.searchParams.get('attempt');\n                    }\n\n                    if (recourceId === null) {\n                        recourceId = 0;\n                    }\n                    if (ur.includes(\"forum\")) {\n                        modulename = \"forum\";\n                    }\n                    if (ur.includes(\"assign\")) {\n                        modulename = \"assign\";\n                    }\n                    if (ur.includes(\"attempt\")) {\n                        modulename = \"quiz\";\n                    }\n                    if (cmid === null) { cmid = 0; }\n\n                    postOne('cursive_user_comments', {\n                        modulename: modulename,\n                        cmid: cmid,\n                        resourceid: recourceId,\n                        courseid: courseid,\n                        usercomment: number,\n                        timemodified: \"1121232\",\n                        editorid: editorid ? editorid : \"\"\n                    });\n                    lastEvent = 'save';\n                    modal.destroy();\n                });\n                modal.getRoot().on(cancel, function () {\n\n                    editor.execCommand('Undo');\n                    lastEvent = 'cancel';\n                });\n                modal.getRoot().on(hidden, function () {\n                    if (lastEvent != 'cancel' && lastEvent != 'save') { editor.execCommand('Undo'); }\n                });\n                return modal;\n            });\n    };\n    const sendKeyEvent = (event, ed) => {\n        let ur = ed.srcElement.baseURI;\n        let parm = new URL(ur);\n        ed = ed;\n        event = event;\n\n\n        if (ur.includes(\"attempt.php\") || ur.includes(\"forum\") || ur.includes(\"assign\")) { } else {\n            return false;\n        }\n        if (ur.includes(\"forum\") || ur.includes(\"assign\")) {\n\n        } else {\n\n            recourceId = parm.searchParams.get('attempt');\n        }\n        if (recourceId === null) {\n\n            recourceId = 0;\n        }\n\n        if (ur.includes(\"forum\")) {\n            modulename = \"forum\";\n        }\n        if (ur.includes(\"assign\")) {\n            modulename = \"assign\";\n        }\n        if (ur.includes(\"attempt\")) {\n            modulename = \"quiz\";\n        }\n\n        filename = `${userid}_${recourceId}_${cmid}_${modulename}_attempt`;\n        if (modulename === 'quiz') {\n            questionid = editorid.split(':')[1].split('_')[0];\n            filename = `${userid}_${recourceId}_${cmid}_${questionid}_${modulename}_attempt`;\n            // console.log(editorid);\n        }\n        console.log(filename);\n        if (localStorage.getItem(filename)) {\n\n            let data = JSON.parse(localStorage.getItem(filename));\n            data.push({\n                resourceId: recourceId,\n                key: ed.key,\n                keyCode: ed.keyCode,\n                event: event,\n            });\n            localStorage.setItem(filename, JSON.stringify(data));\n        } else {\n            let data = [];\n            data.push({\n                resourceId: recourceId,\n                key: ed.key,\n                keyCode: ed.keyCode,\n                event: event,\n            });\n            localStorage.setItem(filename, JSON.stringify(data));\n        }\n\n        // postOne('cursive_json', {\n        //     key: ed.key,\n        //     event: event,\n        //     keyCode: ed.keyCode,\n        //     resourceId: recourceId,\n        //     cmid: cmid,\n        //     modulename: modulename,\n        //     editorid: editorid ? editorid : \"\"\n        // });\n    };\n    editor.on('keyUp', (editor) => {\n        sendKeyEvent(\"keyUp\", editor);\n    });\n    editor.on('Paste', async (e) => {\n        if (is_student && intervention) {\n            getModal(e);\n        }\n    });\n    editor.on('Redo', async (e) => {\n        if (is_student && intervention) {\n            getModal(e);\n        }\n    });\n    editor.on('keyDown', (editor) => {\n        sendKeyEvent(\"keyDown\", editor);\n    });\n    editor.on('init', () => {\n        userid = user.getUserId();\n    });\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_jquery","_user","_exports","register","editor","postOne","async","methodname","args","call","error","console","is_student","jQuery","hasClass","intervention","userid","filename","quizSubmit","recourceId","modulename","editorid","id","classes","attr","split","cmid","parseInt","find","classname","startsWith","questionid","assignSubmit","on","e","preventDefault","data","localStorage","getItem","removeItem","key","event","keyCode","resourceId","json_data","off","click","getModal","create","type","title","getString","body","removeOnClose","done","modal","getRoot","append","show","lastEvent","save","number","document","getElementById","value","execCommand","alert","ur","srcElement","baseURI","parm","URL","courseid","includes","searchParams","get","resourceid","usercomment","timemodified","destroy","cancel","hidden","sendKeyEvent","ed","concat","log","JSON","parse","push","setItem","stringify","user","getUserId"],"mappings":"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"}