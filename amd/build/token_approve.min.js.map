{"version":3,"file":"token_approve.min.js","sources":["../src/token_approve.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/token_approve\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author Brain Station 23 <elearning@brainstation-23.com>\n */\n\ndefine([\"jquery\", \"core/ajax\", \"core/str\"], function($, AJAX, str) {\n  var usersTable = {\n    init: function(page) {\n      str\n        .get_strings([{key: \"field_require\", component: \"tiny_cursive\"}])\n        .done(function() {\n\n          usersTable.getToken(page);\n          usersTable.generateToken();\n\n        });\n    },\n    getToken: function() {\n      $(\"#approve_token\").click(function() {\n        var token = $(\"#id_s_tiny_cursive_secretkey\").val();\n        var promise1 = AJAX.call([\n          {\n            methodname: \"cursive_approve_token\",\n            args: {\n              token: token,\n            },\n          },\n        ]);\n        promise1[0].done(function(json) {\n          var data = JSON.parse(json);\n          var messageAlert = \"\";\n          if (data.status == true) {\n            messageAlert =\n              \"<span class='alert alert-success' role='alert'>\" +\n              data.message +\n              \"</span>\";\n          } else {\n            messageAlert =\n              \"<span class='alert alert-danger' role='alert'>\" +\n              data.message +\n              \"</span>\";\n          }\n          $(\"#token_message\").html(messageAlert);\n        });\n      });\n    },\n\n    generateToken() {\n      var generateToken = $(\"#generate_cursivetoken\");\n      generateToken.on(\"click\", function(e) {\n        e.preventDefault();\n        var promise1 = AJAX.call([\n          {\n            methodname: \"cursive_generate_webtoken\",\n            args: [],\n          },\n        ]);\n        promise1[0].done(function(data) {\n          var messageAlert = \"\";\n          if (data.token) {\n            $(\"#id_s_tiny_cursive_cursivetoken\").val(data.token);\n            messageAlert =\n              \"<span class='text-success' role='alert'>Webservice Token Generation Success</span>\";\n          } else {\n            messageAlert =\n              \"<span class='text-danger' role='alert'>Webservice Token Generation Failed</span>\";\n          }\n          $(\"#cursivetoken_\").html(messageAlert);\n          setTimeout(() => {\n            $(\"#cursivetoken_\").empty();\n          }, 3000);\n        });\n        promise1[0].fail(function(jqXHR, textStatus) {\n          // Break the error message into multiple concatenated strings for better readability\n          var errorMessage =\n            \"<span class='text-danger' role='alert'>\" +\n            \"An error occurred while generating the token: \" +\n            textStatus +\n            \"</span>\";\n          $(\"#cursivetoken_\").html(errorMessage);\n          // Clear the error message after 3 seconds\n          setTimeout(function() {\n            $(\"#cursivetoken_\").empty();\n          }, 3000);\n        });\n        promise1[0].fail(function(textStatus) {\n          var errorMessage =\n            \"<span class='text-danger' role='alert'>\" +\n            \"An error occurred while generating the token: \" +\n            textStatus +\n            \"</span>\";\n          $(\"#cursivetoken_\").html(errorMessage);\n          // Clear the error message after 3 seconds\n          setTimeout(function() {\n            $(\"#cursivetoken_\").empty();\n          }, 3000);\n        });\n      });\n    },\n  };\n  return usersTable;\n});\n"],"names":["define","$","AJAX","str","usersTable","init","page","get_strings","key","component","done","getToken","generateToken","click","token","val","call","methodname","args","json","data","JSON","parse","messageAlert","status","message","html","on","e","preventDefault","promise1","setTimeout","empty","fail","jqXHR","textStatus","errorMessage"],"mappings":"AAsBAA,oCAAO,CAAC,SAAU,YAAa,aAAa,SAASC,EAAGC,KAAMC,SACxDC,WAAa,CACfC,KAAM,SAASC,MACbH,IACGI,YAAY,CAAC,CAACC,IAAK,gBAAiBC,UAAW,kBAC/CC,MAAK,WAEJN,WAAWO,SAASL,MACpBF,WAAWQ,oBAIjBD,SAAU,WACRV,EAAE,kBAAkBY,OAAM,eACpBC,MAAQb,EAAE,gCAAgCc,MAC/Bb,KAAKc,KAAK,CACvB,CACEC,WAAY,wBACZC,KAAM,CACJJ,MAAOA,UAIJ,GAAGJ,MAAK,SAASS,UACpBC,KAAOC,KAAKC,MAAMH,MAClBI,aAAe,GAEjBA,aADiB,GAAfH,KAAKI,OAEL,kDACAJ,KAAKK,QACL,UAGA,iDACAL,KAAKK,QACL,UAEJxB,EAAE,kBAAkByB,KAAKH,qBAK/BX,gBACsBX,EAAE,0BACR0B,GAAG,SAAS,SAASC,GACjCA,EAAEC,qBACEC,SAAW5B,KAAKc,KAAK,CACvB,CACEC,WAAY,4BACZC,KAAM,MAGVY,SAAS,GAAGpB,MAAK,SAASU,UACpBG,aAAe,GACfH,KAAKN,OACPb,EAAE,mCAAmCc,IAAIK,KAAKN,OAC9CS,aACE,sFAEFA,aACE,mFAEJtB,EAAE,kBAAkByB,KAAKH,cACzBQ,YAAW,KACT9B,EAAE,kBAAkB+B,UACnB,QAELF,SAAS,GAAGG,MAAK,SAASC,MAAOC,gBAE3BC,aACF,wFAEAD,WACA,UACFlC,EAAE,kBAAkByB,KAAKU,cAEzBL,YAAW,WACT9B,EAAE,kBAAkB+B,UACnB,QAELF,SAAS,GAAGG,MAAK,SAASE,gBACpBC,aACF,wFAEAD,WACA,UACFlC,EAAE,kBAAkByB,KAAKU,cAEzBL,YAAW,WACT9B,EAAE,kBAAkB+B,UACnB,oBAKJ5B"}