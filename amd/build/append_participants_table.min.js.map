{"version":3,"file":"append_participants_table.min.js","sources":["../src/append_participants_table.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     tiny_cursive/append_participants_table\n * @category TinyMCE Editor\n * @copyright  CTI <info@cursivetechnology.com>\n * @author kuldeep singh <mca.kuldeep.sekhon@gmail.com>\n */\n\ndefine([\"jquery\", \"core/config\", \"core/str\"], function($, mdlcfg, Str) {\n    var usersTable = {\n        init: async function(page) {\n            await usersTable.appendTable(page);\n        },\n        appendTable: async function() {\n            $(document).ready(async function($) {\n                // Get the first row in the table header\n                let hTr = $('thead').find('tr').get()[0];\n                let bodyid = $('body').attr('class');\n                let classes = bodyid.split(' ');\n\n                // Extract course ID\n                let courseid = parseInt(classes.find((classname) => {\n                    return classname.startsWith('course-');\n                }).split('-')[1]);\n\n                // Fetch string for stats header\n                let statsString = await Str.get_string('stats', 'tiny_cursive');\n\n                // Add the stats header if it doesn't already exist\n                if (!$(hTr).find('#stats').length) {\n                    $(hTr).find('th').eq(6).after('<th class=\"header c7\" id=\"stats\">' + statsString + '</th>');\n                }\n\n                // Iterate over each row in the table body\n                $('tbody').find(\"tr\").get().forEach(function(tr) {\n                    let tdUser = $(tr).find(\"td\").get()[0];\n                    let userid = $(tdUser).find(\"input\").get()[0]?.id;\n                    userid = userid?.slice(4); // Extract userid from input id\n\n                    if (userid) {\n                        // Avoid duplicating the icon by checking if the icon is already added\n                        if (!$(tr).find('td').eq(6).find('i').length) {\n                            let color = 'font-size:24px;color:black;text-decoration:none';\n                            let link = mdlcfg.wwwroot + \"/lib/editor/tiny/plugins/cursive/writing_report.php?userid=\"\n                                + userid + \"&courseid=\" + courseid;\n                            let icon = 'fa fa-area-chart';\n\n                            // Add the icon link to the 6th column\n                            let thunderIcon = '<td><a href=\"' + link + '\" data-id=' + userid + '>' +\n                                '<i class=\"' + icon + '\" aria-hidden=\"true\" style=\"' + color + '\"></i></a></td>';\n                            $(tr).find('td').eq(5).after(thunderIcon); // Insert after the 5th column\n                        }\n                    }\n                });\n\n                // Add event listener for page change or other events triggering table update\n                $(\".page-item, .header\").on('click', function() {\n                    setTimeout(() => {\n                        // Prevent multiple initializations by checking if already initialized\n                        if (!$('#stats').length) {\n                            usersTable.init(); // Initialize the table if needed\n                        }\n                    }, 1800); // Slight delay to ensure the DOM is fully updated\n                });\n            });\n        }\n    };\n    return usersTable;\n});\n"],"names":["define","$","mdlcfg","Str","usersTable","init","async","page","appendTable","document","ready","hTr","find","get","classes","attr","split","courseid","parseInt","classname","startsWith","statsString","get_string","length","eq","after","forEach","tr","tdUser","userid","_$$find$get$","id","_userid","slice","color","thunderIcon","wwwroot","on","setTimeout"],"mappings":"AAsBAA,gDAAO,CAAC,SAAU,cAAe,aAAa,SAASC,EAAGC,OAAQC,SAC1DC,WAAa,CACbC,KAAMC,eAAeC,YACXH,WAAWI,YAAYD,OAEjCC,YAAaF,iBACTL,EAAEQ,UAAUC,OAAMJ,eAAeL,OAEzBU,IAAMV,EAAE,SAASW,KAAK,MAAMC,MAAM,GAElCC,QADSb,EAAE,QAAQc,KAAK,SACPC,MAAM,KAGvBC,SAAWC,SAASJ,QAAQF,MAAMO,WAC3BA,UAAUC,WAAW,aAC7BJ,MAAM,KAAK,IAGVK,kBAAoBlB,IAAImB,WAAW,QAAS,gBAG3CrB,EAAEU,KAAKC,KAAK,UAAUW,QACvBtB,EAAEU,KAAKC,KAAK,MAAMY,GAAG,GAAGC,MAAM,oCAAsCJ,YAAc,SAItFpB,EAAE,SAASW,KAAK,MAAMC,MAAMa,SAAQ,SAASC,iCACrCC,OAAS3B,EAAE0B,IAAIf,KAAK,MAAMC,MAAM,GAChCgB,4BAAS5B,EAAE2B,QAAQhB,KAAK,SAASC,MAAM,kCAA9BiB,aAAkCC,MAC/CF,uBAASA,iCAAAG,QAAQC,MAAM,GAEnBJ,SAEK5B,EAAE0B,IAAIf,KAAK,MAAMY,GAAG,GAAGZ,KAAK,KAAKW,OAAQ,KACtCW,MAAQ,kDAMRC,YAAc,iBALPjC,OAAOkC,QAAU,8DACtBP,OAAS,aAAeZ,UAIa,aAAeY,OAAxC,cAHP,mBAIe,+BAAiCK,MAAQ,kBACnEjC,EAAE0B,IAAIf,KAAK,MAAMY,GAAG,GAAGC,MAAMU,iBAMzClC,EAAE,uBAAuBoC,GAAG,SAAS,WACjCC,YAAW,KAEFrC,EAAE,UAAUsB,QACbnB,WAAWC,SAEhB,qBAKZD"}